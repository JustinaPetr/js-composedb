"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[523],{4852:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(9231);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),i=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=i(r),f=o,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(m,c(c({ref:t},l),{},{components:r})):n.createElement(m,c({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var i=2;i<a;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2813:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var n=r(9675),o=(r(9231),r(4852));const a={},c="Core Concepts",s={unversionedId:"core-concepts",id:"core-concepts",title:"Core Concepts",description:"Learn about the Core Concepts for ComposeDB:",source:"@site/docs/core-concepts.mdx",sourceDirName:".",slug:"/core-concepts",permalink:"/docs/preview/core-concepts",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Next Steps",permalink:"/docs/preview/next-steps"},next:{title:"Graph Structure",permalink:"/docs/preview/graph-structure"}},p={},i=[],l={toc:i};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"core-concepts"},"Core Concepts"),(0,o.kt)("p",null,"Learn about the Core Concepts for ComposeDB:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/preview/graph-structure"},"Graph Structure")),"\nComposeDB provides a graph structure for interacting with data on Ceramic, with two types of nodes: accounts & documents, and edges between nodes representing relations."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/preview/data-modeling-concepts"},"Data Modeling Concepts")),"\nStreams of data on Ceramic are automatically tagged to Data Models, like profiles or blog posts, which in turn can have relations with other data models or be formed into groups of models called Composites. Models can be discovered through the Marketplace"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/preview/database"},"Database")),"\nComposeDB is powered by a network of Ceramic nodes, with global state synced across. Today, you\u2019ll need to run your own node to ensure data availability. You can query against your node using Ceramic\u2019s native Client in GraphQL."),(0,o.kt)("p",null,"Ready to dive deeper? Head to ",(0,o.kt)("a",{parentName:"p",href:"/docs/preview/next-steps"},"Next Steps")," ",(0,o.kt)("strong",{parentName:"p"},"\u2192")))}u.isMDXComponent=!0}}]);
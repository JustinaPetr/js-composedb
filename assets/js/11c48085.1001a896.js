"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[236],{4852:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(9231);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=m(a),k=r,u=c["".concat(p,".").concat(k)]||c[k]||s[k]||o;return a?n.createElement(u,i(i({ref:t},d),{},{components:a})):n.createElement(u,i({ref:t},d))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2099:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var n=a(6215),r=(a(9231),a(4852));const o={id:"devtools",title:"Module: devtools",custom_edit_url:null},i=void 0,l={unversionedId:"api/modules/devtools",id:"api/modules/devtools",title:"Module: devtools",description:"Development tools library.",source:"@site/docs/api/modules/devtools.md",sourceDirName:"api/modules",slug:"/api/modules/devtools",permalink:"/js-composedb/docs/api/modules/devtools",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"devtools",title:"Module: devtools",custom_edit_url:null},sidebar:"api",previous:{title:"Class: Context",permalink:"/js-composedb/docs/api/classes/client.Context"},next:{title:"Module: devtools-node",permalink:"/js-composedb/docs/api/modules/devtools_node"}},p={},m=[{value:"Installation",id:"installation",level:2},{value:"Classes",id:"classes",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"CompositeInput",id:"compositeinput",level:3},{value:"CompositeOptions",id:"compositeoptions",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"CompositeParams",id:"compositeparams",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"CreateParams",id:"createparams",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"FromJSONParams",id:"fromjsonparams",level:3},{value:"Type declaration",id:"type-declaration-3",level:4},{value:"FromModelsParams",id:"frommodelsparams",level:3}],d={toc:m};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Development tools library."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --dev @composedb/devtools\n")),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/js-composedb/docs/api/classes/devtools.Composite"},"Composite"))),(0,r.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h3",{id:"compositeinput"},"CompositeInput"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CompositeInput"),": ",(0,r.kt)("a",{parentName:"p",href:"/js-composedb/docs/api/classes/devtools.Composite"},(0,r.kt)("inlineCode",{parentName:"a"},"Composite"))," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/js-composedb/docs/api/modules/devtools#compositeparams"},(0,r.kt)("inlineCode",{parentName:"a"},"CompositeParams"))),(0,r.kt)("p",null,"Supported composite input when comparing or merging composites."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"compositeoptions"},"CompositeOptions"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CompositeOptions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Supported options for merging composites."),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"aliases?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional Models aliases merged in the composite in addition to the ones present in the source composites.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"commonEmbeds?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'"all"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},'"none"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"Iterable"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Behavior to apply for merging common embeds: - ",(0,r.kt)("inlineCode",{parentName:"td"},"none")," (default) will not set an common embed - ",(0,r.kt)("inlineCode",{parentName:"td"},"all")," will merge all the common embeds found in any composite - explicit embed names to set as common embeds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"views?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CompositeViewsDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional views merged in the composite in addition to the ones present in the source composites.")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"compositeparams"},"CompositeParams"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CompositeParams"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Composite instance creation parameters."),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"commits")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"StreamCommits"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Model streams commits, that can be pushed to any Ceramic node to ensure the Model streams used by a composite are available.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"definition")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"InternalCompositeDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Internal metadata describing the composite.")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"createparams"},"CreateParams"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"CreateParams"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Composite creation parameters from a schema."),(0,r.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ceramic")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CeramicApi")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Ceramic instance connected to the node the new Model streams must be created on. The Ceramic instance ",(0,r.kt)("strong",{parentName:"td"},"must have an authenticated DID attached to it")," in order to create Models, using the ",(0,r.kt)("inlineCode",{parentName:"td"},"did:key")," method.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"schema")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"GraphQLSchema")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Composite schema string or GraphQLSchema object.")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fromjsonparams"},"FromJSONParams"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FromJSONParams"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Composite creation parameters from a JSON-encoded definition."),(0,r.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ceramic")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"CeramicApi")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Ceramic instance connected to the node where the Model stream will be pushed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"definition")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"EncodedCompositeDefinition")),(0,r.kt)("td",{parentName:"tr",align:"left"},"JSON-encoded composite definition.")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"frommodelsparams"},"FromModelsParams"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"FromModelsParams"),": ",(0,r.kt)("a",{parentName:"p",href:"/js-composedb/docs/api/modules/devtools#compositeoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"CompositeOptions"))," & { ",(0,r.kt)("inlineCode",{parentName:"p"},"ceramic"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"CeramicApi")," ; ",(0,r.kt)("inlineCode",{parentName:"p"},"models"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]  }"),(0,r.kt)("p",null,"Composite creation parameters from existing models."))}s.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9030],{4852:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var i=n(9231);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),d=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return i.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||r;return n?i.createElement(f,o(o({ref:t},s),{},{components:n})):i.createElement(f,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<r;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4498:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=n(4011),a=(n(9231),n(4852));const r={},o="Supported directives",l={unversionedId:"guides/creating-composites/directives",id:"guides/creating-composites/directives",title:"Supported directives",description:"Directives provide extra metadata when declaring scalars, lists and shapes.",source:"@site/docs/guides/creating-composites/directives.md",sourceDirName:"guides/creating-composites",slug:"/guides/creating-composites/directives",permalink:"/docs/next/guides/creating-composites/directives",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Supported scalars",permalink:"/docs/next/guides/creating-composites/scalars"},next:{title:"Interacting with data",permalink:"/docs/next/category/interacting-with-data"}},c={},d=[{value:"Model identification",id:"model-identification",level:2},{value:"<code>@createModel</code>",id:"createmodel",level:3},{value:"Type validation",id:"type-validation",level:2},{value:"<code>@int</code>",id:"int",level:3},{value:"<code>@float</code>",id:"float",level:3},{value:"<code>@string</code>",id:"string",level:3},{value:"<code>@list</code>",id:"list",level:3},{value:"Views",id:"views",level:2},{value:"<code>@documentAccount</code>",id:"documentaccount",level:3},{value:"<code>@documentVersion</code>",id:"documentversion",level:3}],s={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"supported-directives"},"Supported directives"),(0,a.kt)("p",null,"Directives provide extra metadata when declaring scalars, lists and shapes."),(0,a.kt)("h2",{id:"model-identification"},"Model identification"),(0,a.kt)("h3",{id:"createmodel"},(0,a.kt)("inlineCode",{parentName:"h3"},"@createModel")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@createModel")," directive applies to shapes, indicating the shape needs to be created as a Model. A Composite must contain at least one Model to be valid, otherwise there would be nothing to interact with."),(0,a.kt)("p",null,"When using the ",(0,a.kt)("inlineCode",{parentName:"p"},"@createModel")," directive, two parameters must be provided:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"accountRelation"),": the type of relation between documents created using the Model and the account controlling the document, which can be ",(0,a.kt)("inlineCode",{parentName:"li"},"SINGLE")," for a single document of the given Model (for example profile information), or ",(0,a.kt)("inlineCode",{parentName:"li"},"LIST")," for a potentially infinite list of documents."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"description"),": a string describing the Model, to help with discovery.")),(0,a.kt)("h2",{id:"type-validation"},"Type validation"),(0,a.kt)("p",null,"The following directives provide validation information on primitive scalars and lists:"),(0,a.kt)("h3",{id:"int"},(0,a.kt)("inlineCode",{parentName:"h3"},"@int")),(0,a.kt)("p",null,"Defines the optional ",(0,a.kt)("inlineCode",{parentName:"p"},"max: Int")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"min: Int")," value for ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/guides/creating-composites/scalars#int"},(0,a.kt)("inlineCode",{parentName:"a"},"Int")," scalars"),"."),(0,a.kt)("h3",{id:"float"},(0,a.kt)("inlineCode",{parentName:"h3"},"@float")),(0,a.kt)("p",null,"Defines the optional ",(0,a.kt)("inlineCode",{parentName:"p"},"max: Float")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"min: Float")," value for ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/guides/creating-composites/scalars#float"},(0,a.kt)("inlineCode",{parentName:"a"},"Float")," scalars"),"."),(0,a.kt)("h3",{id:"string"},(0,a.kt)("inlineCode",{parentName:"h3"},"@string")),(0,a.kt)("p",null,"Defines the required ",(0,a.kt)("inlineCode",{parentName:"p"},"maxLength: Int")," and optional ",(0,a.kt)("inlineCode",{parentName:"p"},"minLength: Int")," value for ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/guides/creating-composites/scalars#string"},(0,a.kt)("inlineCode",{parentName:"a"},"String")," scalars")," and scalars extending ",(0,a.kt)("inlineCode",{parentName:"p"},"String"),"."),(0,a.kt)("h3",{id:"list"},(0,a.kt)("inlineCode",{parentName:"h3"},"@list")),(0,a.kt)("p",null,"Defines the required ",(0,a.kt)("inlineCode",{parentName:"p"},"maxLength: Int")," and optional ",(0,a.kt)("inlineCode",{parentName:"p"},"minLength: Int")," numbers of items in a list."),(0,a.kt)("h2",{id:"views"},"Views"),(0,a.kt)("p",null,"View directives represent read-only fields that are not part of the document contents, but rather from metadata."),(0,a.kt)("h3",{id:"documentaccount"},(0,a.kt)("inlineCode",{parentName:"h3"},"@documentAccount")),(0,a.kt)("p",null,"Defines a field as being a view to the account controlling the document, using the ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/guides/creating-composites/scalars#did"},(0,a.kt)("inlineCode",{parentName:"a"},"DID")," scalar type"),"."),(0,a.kt)("p",null,"For example: ",(0,a.kt)("inlineCode",{parentName:"p"},"author: DID! @documentAccount"),"."),(0,a.kt)("h3",{id:"documentversion"},(0,a.kt)("inlineCode",{parentName:"h3"},"@documentVersion")),(0,a.kt)("p",null,"Defines a field as being a view to the current version of the document, using the ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/guides/creating-composites/scalars#commitid"},(0,a.kt)("inlineCode",{parentName:"a"},"CommitID")," scalar type"),"."),(0,a.kt)("p",null,"For example: ",(0,a.kt)("inlineCode",{parentName:"p"},"version: CommitID! @documentVersion"),"."))}p.isMDXComponent=!0}}]);
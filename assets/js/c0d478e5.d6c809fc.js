"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1572],{4852:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>y});var r=n(9231);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3839:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(1504),o=(n(9231),n(4852));const a={},i="Using Relay",c={unversionedId:"guides/interacting/using-relay",id:"guides/interacting/using-relay",title:"Using Relay",description:"Relay is a popular GraphQL client for React.",source:"@site/docs/guides/interacting/using-relay.md",sourceDirName:"guides/interacting",slug:"/guides/interacting/using-relay",permalink:"/docs/preview/guides/interacting/using-relay",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Using Apollo",permalink:"/docs/preview/guides/interacting/using-apollo"}},s={},p=[],l={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-relay"},"Using Relay"),(0,o.kt)("admonition",{title:"What is Relay?",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://relay.dev/"},"Relay")," is a popular GraphQL client for React."),(0,o.kt)("p",{parentName:"admonition"},"It is ",(0,o.kt)("strong",{parentName:"p"},"not")," necessary to use to execute queries and mutations on ComposeDB, but it can help simplify the developer experience for common use-cases.")),(0,o.kt)("p",null,"The ComposeDB client can be used with ",(0,o.kt)("a",{parentName:"p",href:"https://relay.dev/"},"Relay")," by creating a custom ",(0,o.kt)("a",{parentName:"p",href:"https://relay.dev/docs/guides/network-layer/"},"network layer"),", as shown in the example below:"),(0,o.kt)("p",null,"Make sure you have the ",(0,o.kt)("inlineCode",{parentName:"p"},"composedb")," packages ",(0,o.kt)("a",{parentName:"p",href:"/docs/preview/set-up-your-environment"},"installed"),", before running the code below. Additionally, you'll need the ",(0,o.kt)("inlineCode",{parentName:"p"},"relay-runtime")," package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { ComposeClient } from '@composedb/client'\nimport { Environment, Network, RecordSource, Store } from 'relay-runtime'\n\n// Path to the generated runtime composite definition\nimport { definition } from './__generated__/definition.js'\n\nconst composeClient = new ComposeClient({ ceramic: 'http://localhost:7007', definition })\n\n// Create a custom Network using the ComposeClient instance to execute operations\nconst network = Network.create(async (request, variables) => {\n  return await composeClient.executeQuery(request.text, variables)\n})\n\n// Use the created Network instance to create the Relay Environment\nexport const environment = new Environment({ network, store: new Store(new RecordSource()) })\n")))}u.isMDXComponent=!0}}]);